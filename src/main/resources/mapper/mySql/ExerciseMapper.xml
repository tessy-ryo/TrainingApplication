<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- Mapperとxmlのマッピング -->
<mapper namespace="com.example.repository.ExerciseMapper">

<resultMap type="com.example.domain.model.ExerciseRecord" id="record">
<id column="id" property="id"/>
<result column="user_id" property="userId"/>
<result column="body_part_id" property="bodyPartId"/>
<result column="exercise_id" property="exerciseId"/>
<result column="date" property="date"/>
<result column="weight" property="weight"/>
<result column="reps" property="reps"/>
<association property="exercise" resultMap="exercise" columnPrefix="exercise_"/>
<association property="bodyParts" resultMap="bodyParts" columnPrefix="bodyParts_"/>
</resultMap>

<!-- マッピング定義（種目） -->
<resultMap type="com.example.domain.model.Exercise" id="exercise">
	<id column="id" property="id"/>
	<result column="name" property="name"/>
	<result column="body_part_id" property="bodyPartId"/>
	<result column="weight_based" property="weightBased"/>
</resultMap>

<!-- マッピング定義（部位） -->
<resultMap type="com.example.domain.model.BodyParts" id="bodyParts">
	<id column="id" property="id"/>
	<result column="name" property="name"/>
</resultMap>

<!-- 部位複数件取得 -->
<select id = "findBodyParts" resultType="BodyParts">
SELECT
	*
FROM
	training.body_parts
</select>

<!-- 筋トレ種目と種目ID、筋トレ部位を一件取得 -->
<select id="getExerciseBodyPartById" resultMap="record">
SELECT
	exercises.id as exercise_id
	,exercises.name as exercise_name
	,body_parts.name as bodyParts_name
FROM
	training.exercises
JOIN
	training.body_parts
ON
	training.body_parts.id=training.exercises.body_part_id
WHERE
	exercises.id=#{exerciseId}
</select>

<!-- 筋トレ種目複数件取得 -->
<select id="getExercisesByBodyPart" resultType="Exercise">
SELECT
	id,name
FROM
	training.exercises
WHERE
	body_part_id=#{bodyPartId}
AND
	is_deleted=0	
</select>

<select id="findWeightBased" resultType="int">
SELECT
	weight_based
FROM 
	training.exercises
WHERE
	id=#{exerciseId}
</select>

<insert id="recordExerciseData">
	insert into training.exercise_records(
		user_id
		,body_part_id
		,exercise_id
		,date
		,weight
		,reps
		)
		values(
		#{userId}
		,#{bodyPartId}
		,#{exerciseId}
		,#{date}
		,#{weight}
		,#{reps}
		)
</insert>

<!-- ユーザーIDからその人の筋トレ記録を取得する -->
<select id="findExerciseData" resultMap="record">
SELECT
	exercise_records.id	
	,exercise_records.date
	,exercise_records.weight
	,exercise_records.reps
	,exercises.name AS exercise_name
	,body_parts.name AS bodyParts_name
FROM
	training.exercise_records
JOIN
	training.exercises
ON
	training.exercises.id=training.exercise_records.exercise_id
JOIN
	training.body_parts
ON
	training.body_parts.id=training.exercise_records.body_part_id
<where>
	exercise_records.user_id=#{userId}
<if test="searchName!=null and searchName != ''">
		AND (exercise_records.date LIKE CONCAT('%', #{searchName}, '%') OR 
		exercises.name LIKE CONCAT('%', #{searchName}, '%') OR
		body_parts.name LIKE CONCAT('%', #{searchName}, '%'))
</if>
</where>
ORDER BY exercise_records.date DESC
</select>

<!-- 特定のExerciseRecordを筋トレデータIDで取得する -->
<select id="getSpecificData" resultMap="record">
SELECT
	exercise_records.id
	,exercise_records.date
	,exercise_records.weight
	,exercise_records.reps
	,exercise_records.exercise_id 
	,exercise_records.body_part_id 
	,exercises.name AS exercise_name
	,body_parts.name AS bodyParts_name
FROM
	training.exercise_records
JOIN
	training.exercises
ON
	training.exercises.id=training.exercise_records.exercise_id
JOIN
	training.body_parts
ON
	training.body_parts.id=training.exercise_records.body_part_id
WHERE
	exercise_records.id=#{id};
	
</select>

<!-- 筋トレデータをIDで更新する -->
<update id="updateOne">
UPDATE
	training.exercise_records
SET
	exercise_records.date=#{date}
	,exercise_records.body_part_id=#{bodyPartId}
	,exercise_records.exercise_id=#{exerciseId}
	,exercise_records.weight=#{weight}
	,exercise_records.reps=#{reps}
WHERE
	id=#{id}
</update>

<!-- 筋トレデータ1件削除 -->
<delete id="deleteOne">
DELETE from
	training.exercise_records
WHERE
	id=#{id}
</delete>

<!-- 筋トレ種目を種目IDで論理削除する -->
<update id="softDeleteOne">
UPDATE
	training.exercises
SET
	is_deleted=1
WHERE
	exercises.id = #{id}
</update>
</mapper>